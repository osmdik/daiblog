---
import { getCollection } from "astro:content";

interface Props {
  variant?: 'full' | 'compact';
}

const { variant = 'full' } = Astro.props;

// プロフィールデータを取得
const profileEntries = await getCollection('profile');
const profileData = profileEntries[0]?.data;

// スキルをカテゴリ別に色分け
const getSkillColor = (category: string) => {
  const colors = {
    language: 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200',
    framework: 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200',
    cms: 'bg-indigo-100 dark:bg-indigo-900 text-indigo-800 dark:text-indigo-200',
    styling: 'bg-cyan-100 dark:bg-cyan-900 text-cyan-800 dark:text-cyan-200',
  };
  return colors[category as keyof typeof colors] || 'bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200';
};
---

<div class={`profile-card ${variant === 'compact' ? 'p-4' : 'p-8'} bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700`}>
  <!-- アバター部分 -->
  <div class="flex items-center space-x-3 mb-4">
    <div class="relative">
      <img 
        src={profileData?.avatar || "/images/avatar.png"}
        alt={`${profileData?.name || '大嶋大輝'}のプロフィール画像`}
        class={`rounded-full object-cover border-2 border-gray-200 dark:border-gray-600 ${variant === 'compact' ? 'w-16 h-16' : 'w-24 h-24'}`}
        width={variant === 'compact' ? 64 : 96}
        height={variant === 'compact' ? 64 : 96}
      />
    </div>
    
    <div class="flex-1">
      <h3 class="text-lg font-bold text-gray-900 dark:text-white">{profileData?.name || '大嶋大輝'}</h3>
      <p class="text-sm text-gray-600 dark:text-gray-300 font-['Josefin_Sans']">{profileData?.title || 'Software Engineer'}</p>
      {variant === 'full' && (
        <div class="flex items-center space-x-2 mt-1">
          <span class="text-sm text-gray-500 dark:text-gray-400 font-['Josefin_Sans']">📍 {profileData?.location || 'Japan'}</span>
        </div>
      )}
    </div>
  </div>

  <!-- 自己紹介 -->
  <div class="mb-4">
    {variant === 'compact' ? (
      <p class="text-xs text-gray-600 dark:text-gray-300">
        {profileData?.bio || 'フロントエンドエンジニア。WordPress Developer として業務に従事し、個人では Next.js や Astro などのモダンな技術に取り組んでいます。'}
      </p>
    ) : (
      <p class="text-sm text-gray-600 dark:text-gray-300">
        {profileData?.bio || '当サイトをご覧いただきありがとうございます。フロントエンドエンジニアとして活動している大嶋大輝です。業務では WordPress Developer として働き、個人では Next.js や Astro などのモダンな Web 技術に取り組んでいます。趣味は読書で、技術書からビジネス書まで幅広く読んでいます。'}
      </p>
    )}
  </div>

  <!-- スキル（full版のみ） -->
  {variant === 'full' && profileData?.skills && (
    <div class="mb-6">
      <h4 class="text-xs font-semibold text-gray-900 dark:text-white mb-3 font-['Josefin_Sans']">Tech Stack</h4>
      <div class="flex flex-wrap gap-2">
        {profileData.skills.map((skill) => (
          <span class={`px-2 py-0.5 text-xs font-medium rounded-full ${getSkillColor(skill.category)}`}>
            {skill.name}
          </span>
        ))}
      </div>
    </div>
  )}

  {variant === 'compact' && (
    <div class="mt-3 text-center">
      <a 
        href="/profile" 
        class="inline-flex items-center text-xs font-medium text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300"
      >
        詳しいプロフィールを見る
        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  )}
</div>
