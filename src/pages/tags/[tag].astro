---
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
    const allPosts = await getCollection("blog");

    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ];

    return uniqueTags.map((tag) => {
        // tagがundefinedでないことを保証する
        const tagAsString = tag as string; // 型アサーションを使用
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags?.includes(tagAsString)
        );
        return {
            params: { tag: tagAsString },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
// ここでtagがundefinedでないことを保証する
const tagAsString = tag as string; // 型アサーションを使用
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tagAsString}>
    <h2 class="text-center mb-12 text-l lg:text-xl">
        "{tagAsString}"のタグが付いた記事
    </h2>
    <ul>
        {
            posts.map((post) => (
                <li class="mb-8">
                    <p class="font-['Josefin_Sans'] font-light mb-1 text-xs text-gray-600">
                        <FormattedDate date={post.data.pubDate} />
                    </p>
                    <a href={`/posts/${post.slug}/`}>
                        <h4 class="sm:text-lg leading-snug">
                            {post.data.title}
                        </h4>
                    </a>
                </li>
            ))
        }
    </ul>
</BaseLayout>
